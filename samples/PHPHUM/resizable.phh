<?php
function _f($file, $force = false)
{
    return $force || defined('EMBEDED')?'res:///PHP/' . md5($file):$file;
}
include _f(("SDK.php"));
define("ID_LIST",			100);
define("ID_LEVEL1",			102);
define("ID_AUTO",			103);
define("APPNAME",			"Resizable window and controls / split window");
init_dlls();
$mainwin = wb_create_window(NULL, ResizableWindow, APPNAME,200, 100, 410, 400, WBC_NOTIFY, WBC_RESIZE | WBC_MOUSEMOVE | WBC_MOUSEDOWN | WBC_MOUSEUP);
wb_set_area($mainwin, WBC_MINSIZE, 0, 0, 410, 400);
wb_set_area($mainwin, WBC_MAXSIZE, 0, 0, 410, 800);
$list = wb_create_control($mainwin,  ListView, '', 	   150,  20, 248, 214, ID_LIST, WBC_LINES);
$list2 = wb_create_control($mainwin, ListView, '', 	   150, 238, 248, 100, ID_LIST, WBC_LINES);
$list3 = wb_create_control($mainwin, ListView, '', 	    10,  50, 130, 265, ID_LIST, WBC_LINES);
wb_create_control($mainwin, PushButton, 'Do nothing',	10,  20, 130,  24, ID_LEVEL1);
wb_create_control($mainwin, CheckBox,   'Do nothing',	10, 320, 130,  24, ID_AUTO, 0, true);
$statusbar = wb_create_control($mainwin, StatusBar);
wb_set_text($statusbar, APPNAME);
wb_set_handler($mainwin, "process_main");
wb_main_loop();
function process_main($window, $id, $ctrl=0, $lparam=0, $lparam2=0, $lparam3=0)
{
    global $list, $list2, $list3, $statusbar;
    static $lasty = 236;
    static $capturing = false;
    switch($id) {
        case IDDEFAULT:
            if(!$lparam & WBC_LBUTTON) {
                $x = $lparam2 & 0xFFFF;			// Mouse cursor position
                $y = ($lparam2 & 0xFFFF0000) >> 16;
                $pos = wb_get_position($list, true);
                $size = wb_get_size($list);
                if(($x >= $pos[0] - 4) && ($x <= $pos[0] + $size[0] - 4) &&
                        ($y >= $pos[1] + $size[1] - 30) && ($y <= $pos[1] + $size[1] + 10)) {
                    SetMyCursor(IDC_SIZENS);
                } else {
                    SetMyCursor(IDC_ARROW);
                }
            }
            if($lparam & WBC_LBUTTON) {
                $x = $lparam2 & 0xFFFF;			// Mouse cursor position
                $y = ($lparam2 & 0xFFFF0000) >> 16;
                $pos = wb_get_position($list, true);
                $size = wb_get_size($list);
                if(!$capturing)
                    if(!(($x >= $pos[0] - 4) && ($x <= $pos[0] + $size[0] - 4) &&
                            ($y >= $pos[1] + $size[1] - 30) && ($y <= $pos[1] + $size[1] + 10))) {
                        break;
                    }
                if($lparam & WBC_MOUSEDOWN) {
                    SetCapture($window);
                    $capturing = true;
                } else if($lparam & WBC_MOUSEUP) {
                    ReleaseCapture();
                    $capturing = false;
                }
                if($capturing) {
                    SetMyCursor(IDC_SIZENS);
                    $dim = wb_get_size($window, true);
                    $winwidth = $dim[0];
                    $winheight = $dim[1];
                    wb_set_position($list, $winwidth / 2 - 51, 20);
                    wb_set_size($list, $winwidth - ($winwidth / 2 - 51) - 4,
                                min(max(40, $y - 22), ($winheight - 100)));
                    wb_set_position($list2, $winwidth / 2 - 51, $size[1] + 24);
                    wb_set_size($list2, $winwidth - ($winwidth / 2 - 51) - 4,
                                ($winheight - 35) - ($size[1] + 24));
                    $lasty = $y;
                }
            }
        case WBC_RESIZE:
            $dim = wb_get_size($window, true);
            $winwidth = $dim[0];
            $winheight = $dim[1];
            wb_set_position($list, $winwidth / 2 - 51, 20);
            wb_set_size($list, $winwidth - ($winwidth / 2 - 51) - 4,
                        min(max(20, $lasty - 22), ($winheight - 80)));
            $size = wb_get_size($list);
            wb_set_position($list2, $winwidth / 2 - 51, $size[1] + 24);
            wb_set_size($list2, $winwidth - ($winwidth / 2 - 51) - 4,
                        ($winheight - 35) - ($size[1] + 24));
            $pos = wb_get_position($list, true);
            wb_set_size($list3, $pos[0] - 24, $winheight - 108);
            wb_set_position(wb_get_control($window, ID_AUTO), 10, $winheight - 53);
            $dim = wb_get_size($window);
            $winwidth = $dim[0];
            $winheight = $dim[1];
            wb_set_text($statusbar,
                        "Window area: $winwidth x $winheight pixels -- " .
                        "Client area: " . ($lparam3 & 0x0000FFFF) . " x " . (($lparam3 & 0xFFFF0000) / 0x10000) . " pixels\n");
            break;
        case IDCLOSE:
            wb_destroy_window($window);
    }
}
function init_dlls()
{
    global $USER, $KERNEL, $GDI;
    $USER = wb_load_library("USER");
    $KERNEL = wb_load_library("KERNEL");
    $GDI = wb_load_library("GDI");
    define("WBOBJ",			"Vhwnd/Vid/Vuclass/litem/lsubitem/Vstyle/Vparent/Vhandler/Vlparam/V8lparams/Vpbuffer");
    define("WBOBJ_RAW",		"V3l2V13");
    define("WBOBJ_SIZE",	72);
    define("IDC_ARROW",		32512);
    define("IDC_SIZEWE", 	32644);
    define("IDC_SIZENS", 	32645);
}
function SetCapture($hwnd)
{
    global $USER;
    static $pfn = null;
    $wbobj = unpack(WBOBJ, wb_peek($hwnd, WBOBJ_SIZE));
    if($pfn === null) {
        $pfn = wb_get_function_address("SetCapture", $USER);
    }
    return wb_call_function($pfn, array($wbobj["hwnd"]));
}
function ReleaseCapture()
{
    global $USER;
    static $pfn = null;
    if($pfn === null) {
        $pfn = wb_get_function_address("ReleaseCapture", $USER);
    }
    return wb_call_function($pfn);
}
function SetMyCursor($parm)
{
    global $USER;
    static $pfn = null, $pfn2 = null;
    if($pfn === null) {
        $pfn = wb_get_function_address("SetCursor", $USER);
    }
    if($pfn2 === null) {
        $pfn2 = wb_get_function_address("LoadCursor", $USER);
    }
    $hcursor = wb_call_function($pfn2, array(0, $parm));
    wb_call_function($pfn, array($hcursor));
}
?>
